version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: "ap-northeast-1"
    ECR_REPO_NAME: "laravel-app-repo"
    CONTAINER_NAME: "laravel-app-container-by-tf"

phases:
  pre_build:
    commands:
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
      - export ECR_REPO_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME"
      - echo $ECR_REPO_URI
      - echo Logging in to Amazon ECR...
      - echo $AWS_DEFAULT_REGION
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - IMAGE_TAG=`date '+%Y%m%d%H%M%S'`
      - export TZ="Asia/Tokyo"

  build:
    commands:
      - echo Building the Laravel project
      - composer install --no-dev
      # - cp .env.example .env
      - cp .env.production .env
      - php artisan key:generate
      - php artisan config:cache
      - php artisan route:cache

  post_build:
    commands:
      - echo $ECR_REPO_URI
      - echo $ECR_REPO_URI:$IMAGE_TAG
      - echo Building the Docker image...
      - docker build -t $ECR_REPO_NAME .
      - docker tag laravel-app-repo:latest $ECR_REPO_URI:$IMAGE_TAG
      - echo $ECR_REPO_URI
      - echo $IMAGE_TAG
      - docker push $ECR_REPO_URI:$IMAGE_TAG # 失敗する場合、何かの間違いでECRが削除されていないかを確認すること
      - echo Writing image imagedefinitions file...
      - echo '[{"name":"'$CONTAINER_NAME'","imageUri":"'$ECR_REPO_URI:$IMAGE_TAG'"}]' > imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
